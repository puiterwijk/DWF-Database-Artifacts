2016-09-09


https://wordpress.org/plugins/zotpress/changelog/

6.1.3
Fixed security issue with zp_get_account().
New! "style" attribute for searchbar.
Updated widget account selection and fixed retrieval error.
Minor image and code style updates.


https://wordpress.org/support/topic/sql-injection-in-api_user_id/

uberspot
Member
@uberspot 4 months, 1 week ago

Hi,

in lib/shortcode/shortcode.ajax.php
you get the api_user_id from the GET parameter.

function Zotpress_shortcode_AJAX() {
    ...
    $zp_api_user_id = $_GET['api_user_id'];
    ...
    $zp_account = zp_get_account ($wpdb, $zp_api_user_id);
You then use that api_user_id in the functions zp_get_account, zp_get_accounts and zp_clear_cache_for_user in lib/request/request.function.php which do SQL queries with the wpdb->get_results function but don’t do wpdb->prepare on the input.

function zp_get_account ($wpdb, $api_user_id_incoming=false)
{
    if ($api_user_id_incoming !== false)
        $zp_account = $wpdb->get_results("SELECT * FROM
".$wpdb->prefix."zotpress WHERE api_user_id='".$api_user
_id_incoming."'");

I might be mistaken but with a brief glimpse I don’t see where the api_user_id is validated/sanitized in which case there is an sql injection vulnerability. Am I missing something? Is some wordpress function escaping that user input?

Helpful resources:
https://developer.wordpress.org/plugins/security/securing-input/
http://ottopress.com/2013/better-know-a-vulnerability-sql-injection/

https://wordpress.org/plugins/zotpress/

Plugin Author
Katie
Member
@kseaborn 3 months ago

Nice catch. This will be fixed in 6.1.3.
